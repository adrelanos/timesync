#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

run_sdwdate() {
   trap "error_handler" ERR

   PROGRESS="$(( $PROGRESS + 5 ))"
   ## The 5% indicate, that the check has begun.
   $output ${output_opts[@]} --progressbaridx "$progressbaridx" --progressx "$PROGRESS"

   if [ "$AUTOSTARTED" = "1" ]; then
      true "$SCRIPTNAME run_sdwdate: not restarting sdwdate in this case, \
because the init system should have already started sdwdate (unless disabled)."
   else
      ## When manually run...
      if [ ! -f "/var/log/sdwdate.log" ]; then
         local MSG="/var/log/sdwdate.log does not exist yet. Feel free to manually watch sdwdate's log, for example by running:
tail -f /var/log/sdwdate.log"
         $output ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      else
         local MSG="Starting to watch /var/log/sdwdate.log..."
         $output ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"

         tail -f -n 0 "/var/log/sdwdate.log" &
         tail_pid="$!"
         local MSG="Watching /var/log/sdwdate.log..."
         $output ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"

         sleep 2 &
         lastpid="$!"
         wait "$lastpid" || true
      fi

      local MSG='Running "sudo service sdwdate restart"...'
      $output ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
      sudo /usr/lib/sdwdate/restart_fresh
      sudo service sdwdate restart

      local MSG="Done, restarted sdwdate, which should now be running in background..."
      $output ${output_opts[@]} --messagecli --typecli "info" --message "$MSG"
   fi

   PROGRESS="$(( $PROGRESS + 1 ))"
   $output ${output_opts[@]} --progressbaridx "$progressbaridx" --progressx "$PROGRESS"
}
